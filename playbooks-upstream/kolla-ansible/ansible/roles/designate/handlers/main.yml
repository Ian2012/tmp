---
- name: Restart designate-backend-bind9 container
  vars:
    cacert:
      REQUESTS_CA_BUNDLE: "{{ openstack_cacert }}"
    service_name: "designate-backend-bind9"
    service: "{{ designate_services[service_name] }}"
  become: true
  kolla_container:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment: "{% if openstack_cacert != '' %}{{ cacert }}{% else %}{{ undefined_var | default({}) }}{% endif %}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes | reject('equalto', '') | list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"

- name: Restart designate-api container
  vars:
    cacert:
      REQUESTS_CA_BUNDLE: "{{ openstack_cacert }}"
    service_name: "designate-api"
    service: "{{ designate_services[service_name] }}"
  become: true
  kolla_container:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment: "{% if openstack_cacert != '' %}{{ cacert }}{% else %}{{ undefined_var | default({}) }}{% endif %}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes | reject('equalto', '') | list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"

- name: Restart designate-central container
  vars:
    cacert:
      REQUESTS_CA_BUNDLE: "{{ openstack_cacert }}"
    service_name: "designate-central"
    service: "{{ designate_services[service_name] }}"
  become: true
  kolla_container:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment: "{% if openstack_cacert != '' %}{{ cacert }}{% else %}{{ undefined_var | default({}) }}{% endif %}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes | reject('equalto', '') | list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"

- name: Restart designate-producer container
  vars:
    cacert:
      REQUESTS_CA_BUNDLE: "{{ openstack_cacert }}"
    service_name: "designate-producer"
    service: "{{ designate_services[service_name] }}"
  become: true
  kolla_container:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment: "{% if openstack_cacert != '' %}{{ cacert }}{% else %}{{ undefined_var | default({}) }}{% endif %}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes | reject('equalto', '') | list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"

- name: Restart designate-mdns container
  vars:
    cacert:
      REQUESTS_CA_BUNDLE: "{{ openstack_cacert }}"
    service_name: "designate-mdns"
    service: "{{ designate_services[service_name] }}"
  become: true
  kolla_container:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment: "{% if openstack_cacert != '' %}{{ cacert }}{% else %}{{ undefined_var | default({}) }}{% endif %}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes | reject('equalto', '') | list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"

- name: Restart designate-worker container
  vars:
    cacert:
      REQUESTS_CA_BUNDLE: "{{ openstack_cacert }}"
    service_name: "designate-worker"
    service: "{{ designate_services[service_name] }}"
  become: true
  kolla_container:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment: "{% if openstack_cacert != '' %}{{ cacert }}{% else %}{{ undefined_var | default({}) }}{% endif %}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes | reject('equalto', '') | list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"

- name: Restart designate-sink container
  vars:
    cacert:
      REQUESTS_CA_BUNDLE: "{{ openstack_cacert }}"
    service_name: "designate-sink"
    service: "{{ designate_services[service_name] }}"
  become: true
  kolla_container:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    environment: "{% if openstack_cacert != '' %}{{ cacert }}{% else %}{{ undefined_var | default({}) }}{% endif %}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes | reject('equalto', '') | list }}"
    dimensions: "{{ service.dimensions }}"
    healthcheck: "{{ service.healthcheck | default(omit) }}"
  when:
    - kolla_action != "config"
